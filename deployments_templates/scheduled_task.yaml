name: # str
runner:  # Type[Runner] Runners: ScheduledWorkflowRunner
client_address: # str = "localhost:7233"
workflow:
  workflow:  # Type[Workflow] Workflow: Task
  workflow_id:  # str
  task_queue:  # str,  Worker queue Name

  workflow_kwargs:
    activity:  # Type[Activity]
    args: # Optional[list]: activity arguments
    cancellation_type: #Optional[ActivityCancellationType] : ABANDON | TRY_CANCEL | WAIT_CANCELLATION_COMPLETED
    retry_policy: # Optional[dict[str, Any]]
      backoff_coefficient: #float = 2.0
      initial_interval: # Optional[timedelta]
        milliseconds: #Optional[int]
        microseconds: #Optional[int]
        seconds: #Optional[int]
        minutes: #Optional[int]
        hours: #Optional[int]
        days: #Optional[int]
        weeks: #Optional[int]
      maximum_attempts: #int 0= no maximum
      maximum_interval: # Optional[timedelta]
        milliseconds: #Optional[int]
        microseconds: #Optional[int]
        seconds: #Optional[int]
        minutes: #Optional[int]
        hours: #Optional[int]
        days: #Optional[int]
        weeks: #Optional[int]
      non_retryable_error_types: #Optional[list[str]] error_names as str
    
    schedule_to_close_timeout: #Optional[timedelta]
      milliseconds: #Optional[int]
      microseconds: #Optional[int]
      seconds: #Optional[int]
      minutes: #Optional[int]
      hours: #Optional[int]
      days: #Optional[int]
      weeks: #Optional[int]

    heartbeat_timeout:  #Optional[timedelta]
      milliseconds: #Optional[int]
      microseconds: #Optional[int]
      seconds: #Optional[int]
      minutes: #Optional[int]
      hours: #Optional[int]
      days: #Optional[int]
      weeks: #Optional[int]

    schedule_to_start_timeout:  #Optional[timedelta]
      milliseconds: #Optional[int]
      microseconds: #Optional[int]
      seconds: #Optional[int]
      minutes: #Optional[int]
      hours: #Optional[int]
      days: #Optional[int]
      weeks: #Optional[int]

    start_to_close_timeout:  #Optional[timedelta]
      milliseconds: #Optional[int]
      microseconds: #Optional[int]
      seconds: #Optional[int]
      minutes: #Optional[int]
      hours: #Optional[int]
      days: #Optional[int]
      weeks: #Optional[int]


schedule:
  scheduler_id: # str
  trigger_immediately: # bool = False

  tz: # Optional[str] = "Europe/Paris"

  intervals: # Optional[list]
    - every: # timedelta
        milliseconds: #Optional[int]
        microseconds: #Optional[int]
        seconds: #Optional[int]
        minutes: #Optional[int]
        hours: #Optional[int]
        days: #Optional[int]
        weeks: #Optional[int]
      offset: # Optional[timedelta]
        milliseconds: #Optional[int]
        microseconds: #Optional[int]
        seconds: #Optional[int]
        minutes: #Optional[int]
        hours: #Optional[int]
        days: #Optional[int]
        weeks: #Optional[int]

  calendars: # Optional[list[int]]
    second: #list[int]
    minute: #list[int]
    hour: #list[int]
    day_of_month: #list[int]
    month: #list[int]
    year: #list[int]
    day_of_week: #list[int]
    comment: # Optional[str] 

  skip: # Optional[list]
    second: #list[int]
    minute: #list[int]
    hour: #list[int]
    day_of_month: #list[int]
    month: #list[int]
    year: #list[int]
    day_of_week: #list[int]
    comment: # Optional[str] 

  crons: # Optional[list[str]] e.g: "* * * * *"

  jitter: # Optional[timedelta]
    milliseconds: #Optional[int]
    microseconds: #Optional[int]
    seconds: #Optional[int]
    minutes: #Optional[int]
    hours: #Optional[int]
    days: #Optional[int]
    weeks: #Optional[int]

  start_at:
    year: # Optional[int]
    month: # Otional[int]
    day: # Otional[int]
    hours: # Otional[int]
    minute: # Optional[int]
    second: # Optional[int]
    microsecond: # Otional[int]
    tzinfo: # Optional[str]

  end_at:
    year: # Optional[int]
    month: # Otional[int]
    day: # Otional[int]
    hours: # Otional[int]
    minute: # Optional[int]
    second: # Optional[int]
    microsecond: # Otional[int]
    tzinfo: # Optional[str]